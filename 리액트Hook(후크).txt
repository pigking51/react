<리액트 Hook(후크)>
- 리액트 초기에는 클래스 컴포넌트를 사용했음
- 함수형 컴포넌트를 더 많이 사용하게 됨
(이유 => 
단순성, 가독성 우수, 
후크의 도입으로 상태관리 가능,
메모리를 더 적게 사용 가능,
재사용성 우수) 

- 후크란 무엇인가?
: 특정한 기능을 가진 함수들...
: 특정한 기능이란 주로 상태관리와 생명주기와 관련있음

- 리액트 라이브러리가 내장하고 있는 후크의 종류
1. useState
=> 함수형 컴포넌트에서 상태(State)를 추가하고 관리할 수
있게 해주는 후크
2. useEffect
=> 함수형 컴포넌트에서 side effect (부수효과)를 수행하고자 할때 사용하는 후크
==> 호출되는 시기가 중요!! 렌더링이 완료된 이후에 호출
===> 의존성배열이 비어있으면?? 초기 로딩시 1회만 호출
3. useContext
=> 컴포넌트 트리 전체(자식 컴포넌트)에 걸쳐 데이터를 공유할 수 있음
=> prop drilling 문제없이 깊은 레벨의 자식 컴포넌트에게 데이터 전달 가능
4. useRef
==> 브라우저가 관리하는 실제 DOM에 직접 엑세스를 할 수 있는 기능 제공
=> *** 사실상 useRef는 React가 가지고 있는 선언적 모델을 우회하는 기능이므로
리액트가 제공하는 상태관리가 어려워짐.
즉, 남발할 경우 리액트가 제공하는 최적화 기능을 활용 할 수 없으므로 성능이 저하될 수 있음!!
5. useReducer
6. useCallback
7. useMemo
8. UseTransition (React 18+)
...... 이외에도 많음